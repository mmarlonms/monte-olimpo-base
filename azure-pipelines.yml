# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

#Pack1 -------------------
  #CoreException
  #ExceptionHandler
  #ExceptionHandler.Abstractions
  #Filters
  #Log  
  #Extensions.Configuration
  #Swagger1
  #ApiBoot

  Pack1Version: '1.0.4'
  Pack1PushToNuget: false

  Pack2Version: '1.0.4'
  Pack2PushToNuget: false
  
  Pack3Version: '1.0.4'
  Pack3PushToNuget: false

  Pack4Version: '1.0.5'
  Pack4PushToNuget: false


steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: 'sonar- monte-olimpo-base'
    organization: 'mmarlonms'
    scannerMode: 'MSBuild'
    projectKey: 'monte-olimpo-base'
    projectName: 'monte-olimpo-base'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'


- task: SonarCloudAnalyze@1

- task: SonarSource.sonarcloud.38b27399-a642-40af-bb7d-9971f69712e8.SonarCloudPublish@1
  displayName: 'Publish Quality Gate Result'


  # Prepare publish files
- task: DotNetCoreCLI@2
  displayName: Prepare Publish Files
  inputs:
    command: publish
    publishWebProjects: False
    projects: '**/**/MonteOlimpo.*.csproj'
    arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
    zipAfterPublish: False

# Publish the artifacts
- task: PublishBuildArtifacts@1
  displayName: Publish Artifacts


###########################  Start Package 1 ###########################

# Publish MonteOlimpo.Log to NuGet.org
- task: DotNetCoreCLI@2
  displayName: Pack MonteOlimpo.Base.Log
  condition: eq(variables['Pack1PushToNuget'], 'True')
  inputs:
    command: pack
    packagesToPack: '**/**/MonteOlimpo.Base.Log.csproj'
    versioningScheme: byEnvVar
    versionEnvVar: Pack1Version
- task: NuGetCommand@2
  displayName: Push MonteOlimpo.Base.Log to NuGet.org
  condition: eq(variables['Pack1PushToNuget'], 'True')
  continueOnError: True
  inputs:
    command: push
    nuGetFeedType: external
    packagesToPush: '$(build.artifactStagingDirectory)/MonteOlimpo.Base.Log.*.nupkg'
    publishFeedCredentials: NuggetConnect


    # Publish MonteOlimpo.CoreException to NuGet.org
- task: DotNetCoreCLI@2
  displayName: Pack MonteOlimpo.Base.CoreException
  condition: eq(variables['Pack1PushToNuget'], 'True')
  inputs:
    command: pack
    packagesToPack: '**/**/MonteOlimpo.Base.CoreException.csproj'
    versioningScheme: byEnvVar
    versionEnvVar: Pack1Version
- task: NuGetCommand@2
  displayName: Push MonteOlimpo.Base.CoreException to NuGet.org
  condition: eq(variables['Pack1PushToNuget'], 'True')
  continueOnError: True
  inputs:
    command: push
    nuGetFeedType: external
    packagesToPush: '$(build.artifactStagingDirectory)/MonteOlimpo.Base.CoreException.*.nupkg'
    publishFeedCredentials: NuggetConnect

    # Publish MonteOlimpo.ExceptionHandler.Abstractions to NuGet.org
- task: DotNetCoreCLI@2
  displayName: Pack MonteOlimpo.Base.ExceptionHandler.Abstractions
  condition: eq(variables['Pack1PushToNuget'], 'True')
  inputs:
    command: pack
    packagesToPack: '**/**/MonteOlimpo.Base.ExceptionHandler.Abstractions.csproj'
    versioningScheme: byEnvVar
    versionEnvVar: Pack1Version
- task: NuGetCommand@2
  displayName: Push MonteOlimpo.Base.ExceptionHandler.Abstractions to NuGet.org
  condition: eq(variables['Pack1PushToNuget'], 'True')
  continueOnError: True
  inputs:
    command: push
    nuGetFeedType: external
    packagesToPush: '$(build.artifactStagingDirectory)/MonteOlimpo.Base.ExceptionHandler.Abstractions.*.nupkg'
    publishFeedCredentials: NuggetConnect

    # Publish MonteOlimpo.Extensions to NuGet.org
- task: DotNetCoreCLI@2
  displayName: Pack MonteOlimpo.Base.Extensions
  condition: eq(variables['Pack1PushToNuget'], 'True')
  inputs:
    command: pack
    packagesToPack: '**/**/MonteOlimpo.Base.Extensions.csproj'
    versioningScheme: byEnvVar
    versionEnvVar: Pack1Version
- task: NuGetCommand@2
  displayName: Push MonteOlimpo.Base.Extensions to NuGet.org
  condition: eq(variables['Pack1PushToNuget'], 'True')
  continueOnError: True
  inputs:
    command: push
    nuGetFeedType: external
    packagesToPush: '$(build.artifactStagingDirectory)/MonteOlimpo.Base.Extensions.*.nupkg'
    publishFeedCredentials: NuggetConnect

###########################  End Package 1 ###########################




###########################  Start Package 2 ###########################

    # Publish MonteOlimpo.Filters to NuGet.org
- task: DotNetCoreCLI@2
  displayName: Pack MonteOlimpo.Base.Filters
  condition: eq(variables['Pack2PushToNuget'], 'True')
  inputs:
    command: pack
    packagesToPack: '**/**/MonteOlimpo.Base.Filters.csproj'
    versioningScheme: byEnvVar
    versionEnvVar: Pack2Version
- task: NuGetCommand@2
  displayName: Push MonteOlimpo.Base.Filters to NuGet.org
  condition: eq(variables['Pack2PushToNuget'], 'True')
  continueOnError: True
  inputs:
    command: push
    nuGetFeedType: external
    packagesToPush: '$(build.artifactStagingDirectory)/MonteOlimpo.Base.Filters.*.nupkg'
    publishFeedCredentials: NuggetConnect

    # Publish MonteOlimpo.ExceptionHandler to NuGet.org
- task: DotNetCoreCLI@2
  displayName: Pack MonteOlimpo.Base.ExceptionHandler
  condition: eq(variables['Pack2PushToNuget'], 'True')
  inputs:
    command: pack
    packagesToPack: '**/**/MonteOlimpo.Base.ExceptionHandler.csproj'
    versioningScheme: byEnvVar
    versionEnvVar: Pack2Version
- task: NuGetCommand@2
  displayName: Push MonteOlimpo.Base.ExceptionHandler to NuGet.org
  condition: eq(variables['Pack2PushToNuget'], 'True')
  continueOnError: True
  inputs:
    command: push
    nuGetFeedType: external
    packagesToPush: '$(build.artifactStagingDirectory)/MonteOlimpo.Base.ExceptionHandler.*.nupkg'
    publishFeedCredentials: NuggetConnect



###########################  End Package 2 ###########################



###########################  Start Package 3 ###########################



    # Publish MonteOlimpo.Swagger to NuGet.org
- task: DotNetCoreCLI@2
  displayName: Pack MonteOlimpo.Base.Swagger
  condition: eq(variables['Pack3PushToNuget'], 'True')
  inputs:
    command: pack
    packagesToPack: '**/**/MonteOlimpo.Base.Swagger.csproj'
    versioningScheme: byEnvVar
    versionEnvVar: Pack3Version
- task: NuGetCommand@2
  displayName: Push MonteOlimpo.Base.Swagger to NuGet.org
  condition: eq(variables['Pack3PushToNuget'], 'True')
  continueOnError: True
  inputs:
    command: push
    nuGetFeedType: external
    packagesToPush: '$(build.artifactStagingDirectory)/MonteOlimpo.Base.Swagger.*.nupkg'
    publishFeedCredentials: NuggetConnect

###########################  End Package 3 ###########################



###########################  Start Package 4 ###########################



    # Publish MonteOlimpo.ApiBoot to NuGet.org
- task: DotNetCoreCLI@2
  displayName: Pack MonteOlimpo.Base.ApiBoot
  condition: eq(variables['Pack4PushToNuget'], 'True')
  inputs:
    command: pack
    packagesToPack: '**/**/MonteOlimpo.Base.ApiBoot.csproj'
    versioningScheme: byEnvVar
    versionEnvVar: Pack4Version
- task: NuGetCommand@2
  displayName: Push MonteOlimpo.Base.ApiBoot to NuGet.org
  condition: eq(variables['Pack4PushToNuget'], 'True')
  continueOnError: True
  inputs:
    command: push
    nuGetFeedType: external
    packagesToPush: '$(build.artifactStagingDirectory)/MonteOlimpo.Base.ApiBoot.*.nupkg'
    publishFeedCredentials: NuggetConnect

###########################  End Package 4 ###########################

